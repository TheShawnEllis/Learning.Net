using System;

namespace DefiningProperties
{
    public class Book
    {
        // Fields
        private string _name;
        private string _author;
        private int _pagecount;

        // Constructor
        public Book (string name, string author, int pages)
        {
            _name = name;
            _author = author;
            _pagecount = pages;
        }

        public string GetDescription()
        {
            return $"{_name} by {_author}, {_pagecount} pages.";
        }

        // TODO: Using properties to set/get the data in an internal field (backing field)
        public string Name
        {
            get { return _name; }
            set { _name = value; }
        }

        // TODO: Using properties to set/get field shorthand what using the => operator
        public string Author 
        {
            get => _author;
            set => _author = value;
        }
        public int PageCount 
        {
            get => _pagecount;
            set => _pagecount = value;
        }

        // TODO: To make a property read-only or prevent reading the data remove the get/set function
        // A "computed property" computes data from other fields
        public string Description
        {
            get => $"{Name} by {Author}, {PageCount} pages";
        }

        // TODO: Properties can be autogenerated to hold data
        public string ISBN { get; set; }
        public decimal Price { get; set; }


        /* //Long hand way of getting and setting a property
        
        public string GetName()
        {
            return _name;
        }
        public void SetName(string n)
        {
            _name = n;
        }
        public string GetAuthor()
        {
            return _author;
        }
        public void SetAuthor(string n)
        {
            _author = n;
        }
        public int GetPages()
        {
            return _pagecount;
        }
        public void SetPages(int p)
        {
            _pagecount = p;
        }
        */
    }
}